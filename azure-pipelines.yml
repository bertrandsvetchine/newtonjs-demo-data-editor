# Build numbering format
name: $(BuildID)

trigger:
  - master
  - feat/*

pool:
  vmImage: 'ubuntu-latest'

# ---------
# Schedule
# ---------

schedules:
- cron: "0 0 * * Mon"
  displayName: Weekly midnight build
  always: true
  branches:
    include:
    - master
    - releases/*

# ---------
# Variables
# ---------

variables:
  # all variables prefixed `newton-` come from library
  - group: newton-common-vars

  # this pipeline:
  - name:  image-namespace
    value: demo

  - name:  image-name
    value: data-editor

  - name:  docker-image
    value: $(newton-registry)/$(newton-demo-namespace)/$(image-name)

  - name: snapshot-tag
    value: $(docker-image):$(Build.BuildId)

  - name: dev-tag
    value: $(docker-image):dev

# ------
# Stages
# ------

stages:

# Tests
# -----

- stage: Tests
  displayName: 'Test (Node.js)'
  jobs:
    - job: Audit
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - script: npm audit
        displayName: Audit Dependencies
        continueOnError: true

    - job: Linter
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - script: npm ci && npm run lint
        displayName: Lint Code


# Docker: Build and Push
# ----------------------

- stage: BuildImage
  displayName: 'Build (Docker)'
  jobs:
    - job: build_and_push_image
      displayName: Build and Push Image
      steps:
      - script: |
          echo '##vso[task.setvariable variable=build-sha]'$(git rev-parse --short HEAD)''
          echo 'buildSha set to $(build-sha)'
        displayName: Get build git sha

      - script: |
          docker build --tag $(snapshot-tag)-$(build-sha) .
          docker tag $(snapshot-tag)-$(build-sha) $(dev-tag)
        displayName: 'Docker: Build and tag image'

      - task: Docker@1 # Use the task to avoid embedding credentials in pipeline
        displayName: 'Docker: login ACR'
        inputs:
          command: login
          azureSubscriptionEndpoint: $(newton-service-connection)
          azureContainerRegistry: $(newton-registry)

      - script: docker push $(snapshot-tag)-$(build-sha)
        displayName: 'Docker: Push snapshot'

      - script: docker push $(dev-tag)
        displayName: 'Docker: Push dev'

      - script: docker logout $(newton-registry)
        displayName: 'Docker: logout ACR'



# Deploy to App Services
# ----------------------

- stage: DeployImage
  displayName: Deploy
  jobs:
  - job: deploy_image
    displayName: 'Deploy Image (master)'
    steps:
    - task: AzureWebAppContainer@1
      displayName: Deploy container as Azure Web App
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master')) # (master branch and succesful builds only)
      inputs:
        appName: $(pipeline-app-name) # var set in pipeline
        azureSubscription: $(newton-service-connection)
        imageName: $(snapshot-tag)
